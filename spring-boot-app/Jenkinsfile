pipeline {
    agent {
        label 'java-slave'
    }
    environment {
        APP_PORT = '3001'
        JAR_NAME = 'hello-world-spring-1.0.0.jar'
    }
    stages {
        stage('Verify Tools') {
            steps {
                sh '''
                    java -version
                    mvn -version
                '''
            }
        }

        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        
        stage('Build') {
            steps {
                dir('spring-boot-app') {
                    sh 'mvn clean package -DskipTests'
                }
            }
        }
        
        stage('Test') {
            steps {
                dir('spring-boot-app') {
                    sh 'mvn test'
                }
            }
        }

        stage('Archive') {
            steps {
                dir('spring-boot-app') {
                    archiveArtifacts artifacts: 'target/*.jar', fingerprint: true
                }
            }
        }

        stage('Deploy') {
            steps {
                dir('spring-boot-app') {
                    script {
                        // Kill any process running on the specified port
                        sh """
                            PORT=${APP_PORT}
                            PID=\$(lsof -t -i:\${PORT} || echo "")
                            if [ ! -z "\${PID}" ]; then
                                echo "Killing process \${PID} running on port \${PORT}"
                                kill -9 \${PID}
                            fi
                        """
                        
                        // Run the new jar file
                        sh """
                            ls target/
                            nohup java -jar target/${JAR_NAME} --server.port=${APP_PORT} > app.log 2>&1 &
                            
                            // APP_PID=\$!
                            
                            // # Store the start time  
                            // start_time=\$(date +%s)  
                            // # Maximum wait time in seconds (e.g., 180 seconds = 3 minutes)  
                            // max_wait=180  
                            // # Check interval in seconds  
                            // interval=5  

                            // echo "Started Java process with PID: $APP_PID"  
                            // echo "Waiting for application to start on port ${APP_PORT}..."  

                            // while true; do  
                            //     # Check if the port is in use  
                            //     if lsof -i:${APP_PORT} >/dev/null 2>&1; then  
                            //         echo "Application deployed successfully"  
                            //         exit 0
                            //     fi  

                            //     # Check if we've exceeded the maximum wait time  
                            //     current_time=\$(date +%s)  
                            //     elapsed_time=\$((current_time - start_time))  
                                
                            //     if [ \$elapsed_time -ge \$max_wait ]; then  
                            //         echo "Timeout: Application failed to start within \${max_wait} seconds"  
                            //         exit 1  
                            //     fi  

                            //     # Also check if the process is still running  
                            //     if ! ps -p \$! >/dev/null 2>&1; then  
                            //         echo "Error: Java process died unexpectedly. Check app.log for details"  
                            //         exit 1  
                            //     fi  

                            //     echo "Still waiting... (\${elapsed_time}s elapsed)"  
                            //     sleep \$interval  
                            // done  
                        """
                    }
                }
            }
        }
    }
}