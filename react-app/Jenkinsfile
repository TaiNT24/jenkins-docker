pipeline {
    agent {
        label 'nodejs-slave'
    }
    environment {
        DOCKER_IMAGE = 'react-app'
        DOCKER_TAG = 'latest'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        
        stage('Install Dependencies') {
            steps {
                dir('react-app') {
                    sh 'npm install'
                }
            }
            
        }
        
        stage('Build') {
            steps {
                dir('react-app') {
                    sh 'npm run build'
                }
            }
        }
        
        stage('Test') {
            steps {
                dir('react-app') {
                    sh 'npm test -- --watchAll=false'
                }
            }
        }

        stage('Deploy') {
            steps {
                dir('react-app') {
                    sh 'npm install -g serve'
                    script {
                        sh '''
                            # Kill any existing serve process
                            pkill -f "serve -s build" || true
                            
                            # Start serve and capture PID
                            nohup serve -s build -l 3000 > serve.log 2>&1 & echo $! > serve.pid
                            
                            # Give it a moment to start
                            sleep 5
                            
                            # Check if process is running
                            if ps -p $(cat serve.pid) > /dev/null; then
                                echo "Server started successfully on port 3000"
                                cat serve.log
                            else
                                echo "Failed to start server"
                                cat serve.log
                                exit 1
                            fi
                        '''
                    }
                }
            }
        }

        // stage('Build Docker Image') {
        //     steps {
        //         dir('react-app') {
        //             sh 'docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} .'
        //         }
        //     }
        // }

        // stage('Deploy') {
        //     steps {
        //         sh '''
        //             docker stop react-app || true
        //             docker rm react-app || true
        //             docker run -d --name react-app -p 3000:80 ${DOCKER_IMAGE}:${DOCKER_TAG}
        //         '''
        //     }
        // }


        // stage('Archive') {
        //     steps {
        //         dir('react-app') {
        //             archiveArtifacts artifacts: 'build/**/*', fingerprint: true
        //         }
        //     }
        // }
    }
}
